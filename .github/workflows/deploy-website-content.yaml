name: Deploy Website Content

on:
  workflow_call:
    inputs:
      rest-api-endpoint:
        required: false
        type: string
      rest-api-key:
        required: false
        type: string
      bucket-name:
        required: false
        type: string
      frontend-automation-aws-role:
        required: false
        type: string
      production:
        required: true
        type: boolean

jobs:
  deploy-website-content:
    runs-on: ubuntu-latest
    environment: ${{ inputs.production && 'production' || 'development' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: huynhlkevin/personal-website

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Build website content
      run: npm run build
      env:
        REST_API_ENDPOINT: ${{ vars.REST_API_ENDPOINT || inputs.rest-api-endpoint }}
        REST_API_KEY: ${{ vars.REST_API_KEY || inputs.rest-api-key }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.FRONTEND_AUTOMATION_AWS_ROLE || inputs.frontend-automation-aws-role }}
        aws-region: "us-west-1"
  
    - name: Sync files
      run: aws s3 sync ./dist s3://${{ env.BUCKET_NAME }} --delete
      env:
        BUCKET_NAME: ${{ vars.BUCKET_NAME || inputs.bucket-name }}

    - name: Invalidate CloudFront cache
      if: inputs.production == true
      run: aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION }} --paths "/*"
